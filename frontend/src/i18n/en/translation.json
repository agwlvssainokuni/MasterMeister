{
  "app": {
    "title": "Master Meister",
    "subtitle": "Master Data Maintenance System",
    "copyright": "Â© 2025 agwlvssainokuni. All rights reserved."
  },
  "auth": {
    "login": "Login",
    "logout": "Logout",
    "username": "Username",
    "password": "Password",
    "loginButton": "Login",
    "loggingIn": "Logging in...",
    "loginFailed": "Login failed",
    "noAccount": "Don't have an account? ",
    "register": "Register",
    "registerSuffix": " here."
  },
  "login": {
    "title": "Login",
    "email": {
      "label": "Email Address",
      "placeholder": "Enter your email address"
    },
    "password": {
      "label": "Password",
      "placeholder": "Enter your password"
    },
    "submit": "Login",
    "submitting": "Logging in...",
    "validation": {
      "required": "Please enter your email and password"
    },
    "error": {
      "failed": "Login failed"
    }
  },
  "logout": {
    "submit": "Logout",
    "submitting": "Logging out...",
    "error": {
      "failed": "Logout failed"
    }
  },
  "registerEmail": {
    "title": "Register - Email Address",
    "description": "Enter your email address to start registration",
    "email": {
      "label": "Email Address",
      "placeholder": "Enter your email address"
    },
    "submit": "Send Confirmation Email",
    "submitting": "Sending...",
    "validation": {
      "required": "Please enter your email address",
      "invalidEmail": "Please enter a valid email address"
    },
    "error": {
      "failed": "Failed to send confirmation email"
    },
    "success": {
      "title": "Confirmation Email Sent",
      "message": "A confirmation email has been sent to {{email}}.",
      "instruction": "Please click the link in the email to complete your registration."
    },
    "hasAccount": "Already have an account? ",
    "loginLink": "Login"
  },
  "register": {
    "title": "Register - Create Account",
    "description": "Set your password to create your account",
    "email": {
      "label": "Email Address",
      "placeholder": "Email address"
    },
    "password": {
      "label": "Password",
      "placeholder": "Enter your password (8+ characters)"
    },
    "confirmPassword": {
      "label": "Confirm Password",
      "placeholder": "Re-enter your password"
    },
    "submit": "Create Account",
    "submitting": "Creating...",
    "validation": {
      "required": "Please enter your email and password",
      "passwordMismatch": "Passwords do not match",
      "passwordTooShort": "Password must be at least 8 characters",
      "invalidEmail": "Please enter a valid email address",
      "invalidToken": "Invalid token. Please check the link in your email."
    },
    "error": {
      "failed": "Account creation failed",
      "tokenMismatch": "Token and email address do not match"
    },
    "success": {
      "title": "Account Created",
      "message": "Your account has been successfully created.",
      "confirmation": "Please wait for administrator approval. You will be able to log in once approved.",
      "loginButton": "Go to Login"
    },
    "invalidToken": "Invalid token. Please check the link in your email.",
    "startOver": "Start over"
  },
  "navigation": {
    "dashboard": "Dashboard",
    "dataAccess": "Data Access",
    "admin": "Admin",
    "userManagement": "User Management",
    "databaseConnections": "DB Connections",
    "permissions": "Permissions",
    "settings": "Settings"
  },
  "admin": {
    "dashboard": {
      "title": "Admin Dashboard"
    },
    "nav": {
      "users": "User Management",
      "database": "Database Config",
      "schema": "Schema Management",
      "permissions": "Permissions"
    },
    "users": {
      "title": "Pending User Approvals",
      "description": "Review and approve user registration requests",
      "noPendingUsers": "No pending users to approve",
      "approve": "Approve",
      "reject": "Reject",
      "confirming": "Processing...",
      "approved": "User approved successfully",
      "rejected": "User rejected successfully",
      "error": "Failed to process user request",
      "table": {
        "email": "Email Address",
        "registeredAt": "Registered At",
        "actions": "Actions"
      }
    },
    "database": {
      "title": "Database Configuration",
      "description": "Configure database connections and schema settings",
      "comingSoon": "Database configuration features coming soon"
    },
    "permissions": {
      "title": "Permission Management",
      "description": "Manage user permissions and access control",
      "comingSoon": "Permission management features coming soon"
    },
    "confirmDialog": {
      "approve": {
        "title": "Approve User",
        "message": "Are you sure you want to approve user: {{email}}?"
      },
      "reject": {
        "title": "Reject User",
        "message": "Are you sure you want to reject user: {{email}}? This action cannot be undone."
      }
    }
  },
  "common": {
    "loading": "Loading...",
    "error": "An error occurred",
    "success": "Success",
    "cancel": "Cancel",
    "confirm": "Confirm",
    "save": "Save",
    "delete": "Delete",
    "deleting": "Deleting...",
    "edit": "Edit",
    "approve": "Approve",
    "reject": "Reject",
    "retry": "Retry",
    "create": "Create",
    "update": "Update",
    "saving": "Saving...",
    "previous": "Previous",
    "next": "Next",
    "actions": "Actions"
  },
  "dataAccess": {
    "title": "Data Access",
    "description": "Browse and manage database records with permissions",
    "selectTable": "Select a Table",
    "selectTableDescription": "Choose a table from the sidebar to view and manage its data",
    "metadataLoadError": "Failed to load table metadata"
  },
  "tablesList": {
    "title": "Available Tables",
    "searchPlaceholder": "Search tables...",
    "tableCount": "{{count}} of {{total}} tables",
    "noTables": "No tables available",
    "noTablesFound": "No tables found matching your search"
  },
  "dataTable": {
    "recordCount": "{{count}} records",
    "executionTime": "Query executed in {{time}}ms",
    "createRecord": "Create Record",
    "pageSize": "Page Size",
    "pageInfo": "Page {{current}} of {{total}} ({{totalRecords}} records)",
    "noData": "No data available"
  },
  "recordEdit": {
    "createTitle": "Create New Record - {{tableName}}",
    "editTitle": "Edit Record - {{tableName}}",
    "requiredField": "This field is required",
    "autoIncrementField": "Auto-increment fields cannot be manually set",
    "createSuccess": "Record created successfully",
    "updateSuccess": "Record updated successfully",
    "saveError": "Failed to save record"
  },
  "recordDelete": {
    "title": "Delete Record",
    "warning": "This action cannot be undone",
    "table": "Table",
    "record": "Record",
    "recordData": "Record Data",
    "noPrimaryKey": "No primary key defined",
    "moreFields": "... and {{count}} more fields",
    "confirmText": "Are you sure you want to delete this record?",
    "success": "Record deleted successfully",
    "error": "Failed to delete record"
  },
  "filter": {
    "filterColumn": "Filter this column",
    "filterBy": "Filter by {{column}}",
    "operator": "Operator",
    "value": "Value",
    "value2": "End Value",
    "clear": "Clear",
    "apply": "Apply",
    "likePlaceholder": "Use % for wildcards (e.g., %john%)",
    "inPlaceholder": "Comma-separated values (e.g., val1, val2)",
    "valuePlaceholder": "Enter value",
    "operators": {
      "equals": "Equals",
      "notEquals": "Not Equals",
      "like": "Contains",
      "notLike": "Does not contain",
      "greaterThan": "Greater than",
      "lessThan": "Less than", 
      "greaterEquals": "Greater than or equal",
      "lessEquals": "Less than or equal",
      "between": "Between",
      "in": "In list",
      "notIn": "Not in list",
      "isNull": "Is empty",
      "isNotNull": "Is not empty"
    }
  },
  "permissions": {
    "insufficientPermissions": "Insufficient permissions",
    "noReadAccess": "No read access to this data",
    "noWriteAccess": "No write access to this data",
    "noDeleteAccess": "No delete access to this data",
    "noAdminAccess": "No admin access to this resource"
  },
  "dashboard": {
    "title": "Master Meister Dashboard",
    "welcome": "Welcome to Master Meister!",
    "dataAccess": {
      "title": "Data Access",
      "description": "Browse and manage database records with role-based permissions",
      "button": "Access Data"
    },
    "adminPanel": {
      "title": "Admin Panel", 
      "description": "Manage users, permissions, and system configuration",
      "button": "Admin Panel"
    }
  },
  "databaseConnections": {
    "title": "Database Connections",
    "description": "Manage connections to external databases",
    "createConnection": "Create New Connection",
    "editConnection": "Edit Connection",
    "createDescription": "Configure a new database connection",
    "editDescription": "Modify the database connection settings",
    "noConnections": "No database connections",
    "noConnectionsDescription": "Create a new connection to start accessing master data",
    "confirmDelete": "Are you sure you want to delete connection '{{name}}'? This action cannot be undone.",
    "lastTested": "Last tested",
    "created": "Created",
    "updated": "Updated",
    "fields": {
      "name": "Connection Name",
      "dbType": "Database Type",
      "host": "Host",
      "port": "Port",
      "database": "Database Name",
      "username": "Username",
      "password": "Password",
      "connectionParams": "Connection Parameters",
      "active": "Enable connection"
    },
    "placeholders": {
      "name": "Production DB Connection",
      "host": "localhost",
      "database": "production_db",
      "username": "db_user",
      "password": "Enter password",
      "passwordEdit": "Enter only to change",
      "connectionParams": "useSSL=false&serverTimezone=UTC"
    },
    "hints": {
      "connectionParams": "Additional connection parameters in key=value&key2=value2 format",
      "active": "Uncheck to disable this connection",
      "passwordEdit": "Enter password only if you want to change it"
    },
    "validation": {
      "nameRequired": "Connection name is required",
      "hostRequired": "Host is required",
      "portInvalid": "Port must be between 1 and 65535",
      "databaseNameRequired": "Database name is required",
      "usernameRequired": "Username is required",
      "passwordRequired": "Password is required"
    },
    "status": {
      "active": "Active",
      "inactive": "Inactive",
      "connected": "Connected",
      "connectionFailed": "Connection Failed",
      "untested": "Untested"
    },
    "actions": {
      "test": "Test",
      "edit": "Edit",
      "delete": "Delete",
      "activate": "Activate",
      "deactivate": "Deactivate"
    },
    "messages": {
      "createSuccess": "Created connection '{{name}}'",
      "updateSuccess": "Updated connection '{{name}}'",
      "deleteSuccess": "Deleted connection '{{name}}'",
      "activateSuccess": "Activated connection '{{name}}'",
      "deactivateSuccess": "Deactivated connection '{{name}}'",
      "testSuccess": "Connection '{{name}}' test successful ({{responseTime}}ms)",
      "testFailed": "Connection '{{name}}' test failed: {{error}}",
      "saveError": "Failed to save connection",
      "deleteError": "Failed to delete connection",
      "testError": "Connection test failed",
      "toggleError": "Failed to change connection status"
    }
  },
  "schema": {
    "title": "Schema Management",
    "description": "Manage database schema metadata reading and updates",
    "selectConnection": "Select Connection",
    "selectConnectionDescription": "Choose a connection to read schema from",
    "connectionSelected": "Selected",
    "noActiveConnections": "No active connections",
    "noActiveConnectionsDescription": "Create and activate database connections first to read schema",
    "connectionInfo": "{{host}}:{{port}} ({{type}})",
    "tabs": {
      "metadata": "Schema Data",
      "history": "Operation History"
    },
    "actions": {
      "read": "Read Schema",
      "refresh": "Refresh Schema",
      "readFirst": "Read Schema First"
    },
    "reading": "Reading...",
    "refreshing": "Refreshing...",
    "schemasCount": "Schemas",
    "tablesCount": "Tables",
    "columnsCount": "Columns",
    "lastUpdated": "Last Updated",
    "searchPlaceholder": "Search tables and schemas...",
    "columnsInTable": "{{count}} columns",
    "columnName": "Column Name",
    "dataType": "Data Type",
    "attributes": "Attributes",
    "noSchemaData": "No schema data available",
    "noSchemaDataDescription": "Read schema information from the database",
    "operationHistory": "Operation History",
    "successfulOperations": "Success: {{count}}",
    "failedOperations": "Failed: {{count}}",
    "showFailedOnly": "Show failed only",
    "noOperations": "No operations recorded",
    "noOperationsDescription": "Schema operations will appear here when executed",
    "noFailedOperations": "No failed operations",
    "noFailedOperationsDescription": "All operations completed successfully",
    "operations": {
      "readSchema": "Read Schema",
      "refreshSchema": "Refresh Schema",
      "importSchema": "Import Schema",
      "exportSchema": "Export Schema"
    },
    "operationBy": "By: {{user}}",
    "tablesProcessed": "{{count}} tables processed",
    "columnsProcessed": "{{count}} columns processed",
    "errorDetails": "Error Details",
    "operationDetails": "Operation Details",
    "operationId": "Operation ID",
    "executionTime": "Execution Time",
    "messages": {
      "readSuccess": "Read schema from {{database}} ({{tablesCount}} tables)",
      "refreshSuccess": "Refreshed schema from {{database}} ({{tablesCount}} tables)",
      "readError": "Failed to read schema",
      "refreshError": "Failed to refresh schema"
    }
  },
  "permissions": {
    "title": "Permission Management",
    "description": "Manage user permissions and access control via YAML configuration files",
    "selectConnection": "Select Connection",
    "selectConnectionDescription": "Choose a connection to manage permissions for",
    "connectionSelected": "Selected",
    "noActiveConnections": "No active connections",
    "noActiveConnectionsDescription": "Create and activate database connections first to manage permissions",
    "connectionInfo": "{{host}}:{{port}} ({{type}})",
    "tabs": {
      "export": "Export",
      "import": "Import"
    },
    "exportTitle": "Export Permissions",
    "exportDescription": "Download current permission settings as YAML configuration file",
    "exportDescriptionLabel": "Export Description",
    "exportDescriptionPlaceholder": "Permission export for backup",
    "exportDescriptionHint": "Optional description for the exported configuration",
    "importTitle": "Import Permissions",
    "importDescription": "Upload YAML configuration file to import permission settings",
    "selectFile": "Select YAML File",
    "importOptions": "Import Options",
    "importCompleted": "Import completed successfully",
    "userCount": "Users",
    "templateCount": "Templates",
    "totalPermissions": "Permissions",
    "importedUsers": "Imported Users",
    "importedTemplates": "Imported Templates",
    "importedPermissions": "Imported Permissions",
    "skippedDuplicates": "Skipped Duplicates",
    "importErrors": "Import Errors",
    "actions": {
      "export": "Export Permissions",
      "import": "Import Permissions",
      "validate": "Validate File"
    },
    "exporting": "Exporting...",
    "importing": "Importing...",
    "validating": "Validating...",
    "options": {
      "importUsers": "Import user permissions",
      "importTemplates": "Import permission templates",
      "clearExistingPermissions": "Clear existing permissions before import",
      "skipDuplicates": "Skip duplicate permissions"
    },
    "messages": {
      "loadConnectionsError": "Failed to load database connections",
      "exportSuccess": "Exported permissions for {{connection}}",
      "exportError": "Failed to export permissions",
      "importSuccess": "Imported permissions for {{connection}}: {{users}} users, {{templates}} templates, {{permissions}} permissions",
      "importError": "Failed to import permissions",
      "validateSuccess": "YAML file is valid",
      "validateError": "YAML validation failed: {{message}}"
    }
  }
}
